/**
 Establish a cross-browser, (pixel-perfect?), (unit-agnostic?) baseline grid
*/

/*
 Goals: As stated above
  [-] Want to be able to define sizes [ ] `em`, [ ] `rem`, or [√] `px`
     [√] `px` should not require `font-size: 62.5%` hack
  [ ] Want to be able to easily scale elements (Gridlover or %)
  [ ] Want to use absolute sizes for print (TBD)
  [-] Want [√] visible, [√] toggleable grid, ideally [ ] without jQuery dependency
     [ ] Draw grid such that `box-sizing` does not matter

 Notes:
  - No mixing units (unless unit + %)
  - Prefer unitless line height, but maybe OK?

  - baseline-min.less - em, rem, px, %, pt
  - baseline-extra.less - (other font sizes)
  - baseline-classes.less - .bl-larger, .bl-resizeTo-[10-200], etc.
*/

// units: http://www.w3schools.com/cssref/css_units.asp
// - relative (1): em, rem, px
// - relative (2): %
// - relative (3): ex, ch, vw, vh, vmin, vmax,
// - absolute (1): pt
// - absolute (2): cm, mm, in, pc
// - modifiers: [xx-small, xx-large], smaller, larger


@grid_unit: "px";

@DEFAULT_FONT_SIZE:   15px;   // px required
@DEFAULT_LINE_HEIGHT: 1.618;

// Grid notes: Calculating a baseline grid is tricky. Calculations expect the
//  base font to be sized in px. Subsequent fonts use ems. Pixel jog is still
//  an issue. Firefox works with exact values, Chrome/Safari work with floor()
// NOTE: Pixel jog vs. self-correcting grid (go with that)

// The leading defines the height of one line of text, including margin, at the
// base font size. Smaller text should have its line height adjusted so that it
// occupies one line. Larger text should have some fractional margin added such
// that it occupies some whole-number multiple of lines.
//
// That's really all there is to it: Adjust line heights and margins such that
// text of mixed sizes stays between the lines. The complexity comes from how
// all the various units work, and some differences between browsers.
@exact_leading: @DEFAULT_FONT_SIZE * @DEFAULT_LINE_HEIGHT;
// @leading: @exact_leading;          // firefox
@leading: floor(@exact_leading);   // chrome/safari (TBD: IE)


body {
    font-size: @DEFAULT_FONT_SIZE;
    line-height: @DEFAULT_LINE_HEIGHT;
}

// lobotomized owl
// - @via http://alistapart.com/article/axiomatic-css-and-lobotomized-owls
* + * {
    margin-top: @leading;
}

// default user agent stylesheet assigns a 1em top margin
p:first-child {
    margin-top: 0;
}

// exception: list items, stacked divs
li + li,
div + div {
    margin-top: 0;
}





h1, h2 {
    .resizeTo(200%);
}

h3 {
    .resizeTo(150%);
}

h4 {
    .resizeTo(80%);
}

h5 {
    .resizeTo(100%);
}

h6 {
    .resizeTo(50%);
}


// .resizeTo(@scale: 100%) {
//     @s: unit(@scale) / 100;
//     font-size: @DEFAULT_FONT_SIZE * (@DEFAULT_LINE_HEIGHT * @s);
// }

.resizeTo(@scale: 100%) {

    // convert percentage to numeric value
    @percent: unit(@scale) / 100;                // e.g. "150%" -> 1.5

    // compute new font size
    @font-size: @DEFAULT_FONT_SIZE * @percent;   // e.g. 15px -> 22.5px

    // compute new line size
    @line-size: @font-size * @DEFAULT_LINE_HEIGHT;      // e.g. 22.5px * 1.5 = 33.75px

    // compute lines used (unitless)
    @lines-used: ceil(unit(@line-size / @leading));
    @line-height: unit((@leading * @lines-used) / @font-size);

    // @line-height: @DEFAULT_LINE_HEIGHT * @percent;

    font-size: @font-size;
    line-height: @line-height;


    bl-line-size: @line-size;
    bl-lines-used: @lines-used;
}



// .less-gridlover-heading(@step, @rem: false) {
//     @font-size: @lgl-base-font-size;
//     @scale: @lgl-scale-factor;
//     @computed-font-size: round(@font-size * pow(@scale, @step));
//     @line-height: round(@font-size * @lgl-base-line-height);
//     @lines: ceil(@computed-font-size / @line-height);
//     font-size: @computed-font-size * 1px;
//     line-height: @line-height * @lines * 1px;
//     margin-bottom: @line-height * 1px;
//
//     margin-top: @line-height * 1px;
//     & when (@step > 1) {
//         margin-top: @line-height * 2 * 1px;
//     }
// }

// UTILITY to maintain the grid
// .resizeTo(@size: 100%) {
//     font-size: @size;
//     line-height: @LINE_HEIGHT / (unit(@size) / 100);
// }









// HASHGRID (replace?)
#grid {
    left: 50%;
    margin-left: -50%;
    position: absolute;
    top: 0;
    width: 100%;

    @media @DESKTOP {
        margin-left: -(@PAGE_WIDTH / 2);
        width: @PAGE_WIDTH;
    }

    div.vert {
        border: 1px solid @YELLOW;
        border-width: 0 1px;
        width: 100%;
    }

    div.horiz {
        border-bottom: 1px dotted @DARK_GREY;
        height: @leading;
        margin: 0;
        padding: 0;
    }
}

// FIXME: Remove after testing
h1, h2, h3, h4, h5, h6 {
    color: @BLUE;
}
hr {
    .hide();
}
// END REMOVE
